name: CI
on:
  # When code is pushed to main, and when a PR targeting main is updated.
  push:
    branches: [main]
  pull_request:
    branches: [main]
    # Only run for PR events that are not “closed” (i.e. open, updated, or reopened)
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Runs tests 🧪
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install poetry
        uses: abatilo/actions-poetry@v4

      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/cache@v3
        name: Cache virtual environment
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        run: poetry run tox

      - name: Run linter
        run: poetry run ruff check

  build:
    name: Build distribution 📦
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install poetry
        uses: abatilo/actions-poetry@v4

      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/cache@v3
        name: Cache virtual environment
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Build packages
        run: poetry build

      - name: Upload distribution artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-and-release:
    name: Publish to PyPI and create GitHub Release
    needs: build
    # This job will only run on push events where the commit message starts with "Merge pull request"
    if: ${{ github.event_name == 'push' && startsWith(github.event.head_commit.message, 'Merge pull request') }}
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/exifool
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Download distribution artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Sign distributions with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release create "$GITHUB_REF_NAME" --repo "$GITHUB_REPOSITORY" --notes ""

      - name: Upload signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release upload "$GITHUB_REF_NAME" dist/** --repo "$GITHUB_REPOSITORY"

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs: build
    # This job runs only on pull_request events (i.e. for open, updated, or reopened PRs)
    if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/exifool
    permissions:
      id-token: write
    steps:
      - name: Download distribution artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

